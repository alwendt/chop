#define CNST (1<<4) 
#define CNSTC ((1<<4)+CHAR ) 
#define CNSTD ((1<<4)+DOUBLE ) 
#define CNSTF ((1<<4)+FLOAT ) 
#define CNSTI ((1<<4)+INT ) 
#define CNSTP ((1<<4)+POINTER ) 
#define CNSTS ((1<<4)+SHORT ) 
#define CNSTU ((1<<4)+UNSIGNED ) 
#define ARG (2<<4) 
#define ARGB ((2<<4)+STRUCT ) 
#define ARGD ((2<<4)+DOUBLE ) 
#define ARGF ((2<<4)+FLOAT ) 
#define ARGI ((2<<4)+INT ) 
#define ARGP ((2<<4)+POINTER ) 
#define ASGN (3<<4) 
#define ASGNB ((3<<4)+STRUCT ) 
#define ASGNC ((3<<4)+CHAR ) 
#define ASGND ((3<<4)+DOUBLE ) 
#define ASGNF ((3<<4)+FLOAT ) 
#define ASGNI ((3<<4)+INT ) 
#define ASGNS ((3<<4)+SHORT ) 
#define ASGNP ((3<<4)+POINTER ) 
#define INDIR (4<<4) 
#define INDIRB ((4<<4)+STRUCT ) 
#define INDIRC ((4<<4)+CHAR ) 
#define INDIRD ((4<<4)+DOUBLE ) 
#define INDIRF ((4<<4)+FLOAT ) 
#define INDIRI ((4<<4)+INT ) 
#define INDIRS ((4<<4)+SHORT ) 
#define INDIRP ((4<<4)+POINTER ) 
#define CVC (5<<4) 
#define CVCI ((5<<4)+INT ) 
#define CVCU ((5<<4)+UNSIGNED ) 
#define CVD (6<<4) 
#define CVDF ((6<<4)+FLOAT ) 
#define CVDI ((6<<4)+INT ) 
#define CVF (7<<4) 
#define CVFD ((7<<4)+DOUBLE ) 
#define CVI (8<<4) 
#define CVIC ((8<<4)+CHAR ) 
#define CVID ((8<<4)+DOUBLE ) 
#define CVIS ((8<<4)+SHORT ) 
#define CVIU ((8<<4)+UNSIGNED ) 
#define CVP (9<<4) 
#define CVPU ((9<<4)+UNSIGNED ) 
#define CVS (10<<4) 
#define CVSI ((10<<4)+INT ) 
#define CVSU ((10<<4)+UNSIGNED ) 
#define CVU (11<<4) 
#define CVUC ((11<<4)+CHAR ) 
#define CVUI ((11<<4)+INT ) 
#define CVUP ((11<<4)+POINTER ) 
#define CVUS ((11<<4)+SHORT ) 
#define NEG (12<<4) 
#define NEGD ((12<<4)+DOUBLE ) 
#define NEGF ((12<<4)+FLOAT ) 
#define NEGI ((12<<4)+INT ) 
#define CALL (13<<4) 
#define CALLB ((13<<4)+STRUCT ) 
#define CALLD ((13<<4)+DOUBLE ) 
#define CALLF ((13<<4)+FLOAT ) 
#define CALLI ((13<<4)+INT ) 
#define CALLV ((13<<4)+VOID ) 
#define LOAD (14<<4) 
#define LOADB ((14<<4)+STRUCT ) 
#define LOADC ((14<<4)+CHAR ) 
#define LOADD ((14<<4)+DOUBLE ) 
#define LOADF ((14<<4)+FLOAT ) 
#define LOADI ((14<<4)+INT ) 
#define LOADP ((14<<4)+POINTER ) 
#define LOADS ((14<<4)+SHORT ) 
#define LOADU ((14<<4)+UNSIGNED ) 
#define RET (15<<4) 
#define RETD ((15<<4)+DOUBLE ) 
#define RETF ((15<<4)+FLOAT ) 
#define RETI ((15<<4)+INT ) 
#define RETV ((15<<4)+VOID ) 
#define ADDRG (16<<4) 
#define ADDRGP ((16<<4)+POINTER ) 
#define ADDRF (17<<4) 
#define ADDRFP ((17<<4)+POINTER ) 
#define ADDRL (18<<4) 
#define ADDRLP ((18<<4)+POINTER ) 
#define ADD (19<<4) 
#define ADDD ((19<<4)+DOUBLE ) 
#define ADDF ((19<<4)+FLOAT ) 
#define ADDI ((19<<4)+INT ) 
#define ADDP ((19<<4)+POINTER ) 
#define ADDU ((19<<4)+UNSIGNED ) 
#define SUB (20<<4) 
#define SUBD ((20<<4)+DOUBLE ) 
#define SUBF ((20<<4)+FLOAT ) 
#define SUBI ((20<<4)+INT ) 
#define SUBP ((20<<4)+POINTER ) 
#define SUBU ((20<<4)+UNSIGNED ) 
#define LSH (21<<4) 
#define LSHI ((21<<4)+INT ) 
#define LSHU ((21<<4)+UNSIGNED ) 
#define MOD (22<<4) 
#define MODI ((22<<4)+INT ) 
#define MODU ((22<<4)+UNSIGNED ) 
#define RSH (23<<4) 
#define RSHI ((23<<4)+INT ) 
#define RSHU ((23<<4)+UNSIGNED ) 
#define BAND (24<<4) 
#define BANDU ((24<<4)+UNSIGNED ) 
#define BCOM (25<<4) 
#define BCOMU ((25<<4)+UNSIGNED ) 
#define BOR (26<<4) 
#define BORU ((26<<4)+UNSIGNED ) 
#define BXOR (27<<4) 
#define BXORU ((27<<4)+UNSIGNED ) 
#define DIV (28<<4) 
#define DIVD ((28<<4)+DOUBLE ) 
#define DIVF ((28<<4)+FLOAT ) 
#define DIVI ((28<<4)+INT ) 
#define DIVU ((28<<4)+UNSIGNED ) 
#define MUL (29<<4) 
#define MULD ((29<<4)+DOUBLE ) 
#define MULF ((29<<4)+FLOAT ) 
#define MULI ((29<<4)+INT ) 
#define MULU ((29<<4)+UNSIGNED ) 
#define EQ (30<<4) 
#define EQD ((30<<4)+DOUBLE ) 
#define EQF ((30<<4)+FLOAT ) 
#define EQI ((30<<4)+INT ) 
#define EQU ((30<<4)+UNSIGNED ) 
#define GE (31<<4) 
#define GED ((31<<4)+DOUBLE ) 
#define GEF ((31<<4)+FLOAT ) 
#define GEI ((31<<4)+INT ) 
#define GEU ((31<<4)+UNSIGNED ) 
#define GT (32<<4) 
#define GTD ((32<<4)+DOUBLE ) 
#define GTF ((32<<4)+FLOAT ) 
#define GTI ((32<<4)+INT ) 
#define GTU ((32<<4)+UNSIGNED ) 
#define LE (33<<4) 
#define LED ((33<<4)+DOUBLE ) 
#define LEF ((33<<4)+FLOAT ) 
#define LEI ((33<<4)+INT ) 
#define LEU ((33<<4)+UNSIGNED ) 
#define LT (34<<4) 
#define LTD ((34<<4)+DOUBLE ) 
#define LTF ((34<<4)+FLOAT ) 
#define LTI ((34<<4)+INT ) 
#define LTU ((34<<4)+UNSIGNED ) 
#define NE (35<<4) 
#define NED ((35<<4)+DOUBLE ) 
#define NEF ((35<<4)+FLOAT ) 
#define NEI ((35<<4)+INT ) 
#define NEU ((35<<4)+UNSIGNED ) 
#define JUMP (36<<4) 
#define JUMPV ((36<<4)+VOID ) 
#define LABEL (37<<4) 
#define LABELV ((37<<4)+VOID ) 
